name: Build Android APK (Robust)

on:
  workflow_dispatch:  # Manual trigger only

jobs:
  build-apk:
    runs-on: ubuntu-20.04  # Use Ubuntu 20.04 for better stability
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up Python 3.8
      uses: actions/setup-python@v5
      with:
        python-version: '3.8'  # Use Python 3.8 for better compatibility
        
    - name: Install system dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y \
          git zip unzip \
          openjdk-8-jdk \
          python3-pip \
          autoconf libtool pkg-config \
          zlib1g-dev libncurses5-dev libncursesw5-dev libtinfo6 \
          cmake libffi-dev libssl-dev \
          build-essential \
          python3-dev \
          python3-venv
        
    - name: Set JAVA_HOME
      run: |
        echo "JAVA_HOME=/usr/lib/jvm/java-8-openjdk-amd64" >> $GITHUB_ENV
        
    - name: Install Python dependencies
      run: |
        pip3 install --upgrade pip
        pip3 install buildozer==1.5.0 cython==0.29.33
        
    - name: Use simplified buildozer.spec
      run: |
        cp buildozer.spec.simple buildozer.spec
        
    - name: Show buildozer.spec content
      run: |
        echo "=== buildozer.spec content ==="
        cat buildozer.spec
        
    - name: Initialize buildozer
      run: |
        buildozer init || true
        
    - name: Clean previous builds
      run: |
        buildozer android clean || true
        
    - name: Test buildozer configuration
      run: |
        echo "=== Testing buildozer configuration ==="
        buildozer android --help || true
        buildozer android clean || true
        
    - name: Accept Android SDK licenses
      run: |
        echo "=== Accepting Android SDK licenses ==="
        mkdir -p ~/.android
        echo "### User Sources for Android SDK Manager" > ~/.android/repositories.cfg
        echo "count=0" >> ~/.android/repositories.cfg
        
        # Accept licenses automatically
        yes | sdkmanager --licenses || {
          echo "=== Setting up Android SDK manually ==="
          export ANDROID_HOME=$HOME/.buildozer/android/platform/android-sdk
          export PATH=$PATH:$ANDROID_HOME/tools:$ANDROID_HOME/platform-tools
          
          # Create SDK directory
          mkdir -p $ANDROID_HOME
          
          # Download and setup SDK tools
          wget -q https://dl.google.com/android/repository/commandlinetools-linux-11076708_latest.zip
          unzip -q commandlinetools-linux-11076708_latest.zip -d $ANDROID_HOME
          mv $ANDROID_HOME/cmdline-tools $ANDROID_HOME/tools
          
          # Accept licenses
          yes | $ANDROID_HOME/tools/bin/sdkmanager --licenses || true
        }
        
    - name: Build APK with error handling
      run: |
        echo "=== Starting buildozer build ==="
        set -e  # Exit on any error
        
        # Set environment variables for Android SDK
        export ANDROID_HOME=$HOME/.buildozer/android/platform/android-sdk
        export PATH=$PATH:$ANDROID_HOME/tools:$ANDROID_HOME/platform-tools
        
        # Try to build with timeout
        timeout 1800 buildozer android debug -v || {
          echo "Build failed or timed out"
          echo "=== Checking build status ==="
          ls -la bin/ || echo "No bin directory"
          find . -name "*.apk" -type f || echo "No APK files found"
          exit 1
        }
        
    - name: Verify APK creation
      run: |
        echo "=== Verifying APK creation ==="
        if [ -f bin/*.apk ]; then
          echo "✅ APK created successfully"
          ls -la bin/*.apk
          file bin/*.apk
        else
          echo "❌ No APK found"
          echo "=== Checking build directories ==="
          find . -name "*.apk" -type f || echo "No APK files anywhere"
          ls -la .buildozer/ || echo "No .buildozer directory"
        fi
        
    - name: Show build logs on failure
      if: failure()
      run: |
        echo "=== Build failed, showing detailed logs ==="
        find .buildozer -name "*.log" -exec echo "=== {} ===" \; -exec cat {} \; || true
        echo "=== Buildozer directory contents ==="
        ls -la .buildozer/ || true
        echo "=== Bin directory contents ==="
        ls -la bin/ || true
        
    - name: Upload APK (if exists)
      uses: actions/upload-artifact@v4
      with:
        name: ltrconverter-apk
        path: bin/*.apk
        if-no-files-found: ignore
